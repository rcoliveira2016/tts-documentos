version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    hostname: azurite
    expose:
      - 10000
      - 10001
      - 10002
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - default-azurite-volume:/data

  api:
    build:
      context: .
      dockerfile: ./ttsdocumentos_api/Dockerfile
    container_name: api
    ports:
      - "8085:80"
    depends_on:
      - rabbitmq 
      - azurite
    environment:
      - RABBITMQ_HOST=rabbitmq
      - AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;

  workers:
    build:
      context: .
      dockerfile: ./ttsdocumentos_workers/Dockerfile
    container_name: workers
    depends_on:
      rabbitmq:
        condition: service_healthy
      azurite:
        condition: service_started
      api:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;


volumes:
  default-azurite-volume:
